// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace SistemaTren.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SistemaVentaBoletosTrenes.Modelo.Asiento", b =>
                {
                    b.Property<int>("AsientoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AsientoID"));

                    b.Property<string>("TipoAsiento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AsientoID");

                    b.ToTable("Asientos");
                });

            modelBuilder.Entity("SistemaVentaBoletosTrenes.Modelo.Boleto", b =>
                {
                    b.Property<int>("BoletoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BoletoID"));

                    b.Property<int>("AsientoID")
                        .HasColumnType("integer");

                    b.Property<int>("CategoriaID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Precio")
                        .HasColumnType("double precision");

                    b.Property<int>("RutaID")
                        .HasColumnType("integer");

                    b.HasKey("BoletoID");

                    b.HasIndex("AsientoID");

                    b.HasIndex("CategoriaID");

                    b.HasIndex("RutaID");

                    b.ToTable("Boletos");
                });

            modelBuilder.Entity("SistemaVentaBoletosTrenes.Modelo.Categoria", b =>
                {
                    b.Property<int>("CategoriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategoriaID"));

                    b.Property<double>("Descuento")
                        .HasColumnType("double precision");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CategoriaID");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("SistemaVentaBoletosTrenes.Modelo.Cliente", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClienteID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ClienteID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("SistemaVentaBoletosTrenes.Modelo.Notificacion", b =>
                {
                    b.Property<int>("NotificacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NotificacionID"));

                    b.Property<int>("ClienteID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("NotificacionID");

                    b.HasIndex("ClienteID");

                    b.ToTable("Notificaciones");
                });

            modelBuilder.Entity("SistemaVentaBoletosTrenes.Modelo.Ruta", b =>
                {
                    b.Property<int>("RutaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RutaID"));

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Horario")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RutaID");

                    b.ToTable("Rutas");
                });

            modelBuilder.Entity("SistemaVentaBoletosTrenes.Modelo.Boleto", b =>
                {
                    b.HasOne("SistemaVentaBoletosTrenes.Modelo.Asiento", "Asiento")
                        .WithMany()
                        .HasForeignKey("AsientoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaVentaBoletosTrenes.Modelo.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaVentaBoletosTrenes.Modelo.Ruta", "Ruta")
                        .WithMany()
                        .HasForeignKey("RutaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asiento");

                    b.Navigation("Categoria");

                    b.Navigation("Ruta");
                });

            modelBuilder.Entity("SistemaVentaBoletosTrenes.Modelo.Notificacion", b =>
                {
                    b.HasOne("SistemaVentaBoletosTrenes.Modelo.Cliente", "Cliente")
                        .WithMany("Notificaciones")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("SistemaVentaBoletosTrenes.Modelo.Cliente", b =>
                {
                    b.Navigation("Notificaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
